/*
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * AbstractTabMenuItem.java
 * Copyright (C) 2016 University of Waikato, Hamilton, NZ
 */

package meka.gui.explorer;

import javax.swing.JMenuItem;
import java.util.HashMap;

/**
 * Ancestor to classes that can be added to a tab's custom menu.
 *
 * @author FracPete (fracpete at waikato dot ac dot nz)
 * @version $Revision$
 */
public abstract class AbstractTabMenuItem<T extends AbstractExplorerTab> {

	/**
	 * Checks whether a session value is present.
	 *
	 * @param owner		the tab this menu item belongs to
	 * @param key       the key to look for
	 * @return          true if present
	 */
	public boolean hasSessionValue(T owner, String key) {
		if (owner.getSession().containsKey(getClass())) {
			return owner.getSession().get(getClass()).containsKey(key);
		}
		return false;
	}

	/**
	 * Returns a session value, if present.
	 *
	 * @param owner		the tab this menu item belongs to
	 * @param key       the key to look for
	 * @return          the value, null if not present
	 */
	public Object getSessionValue(T owner, String key) {
		if (owner.getSession().containsKey(getClass())) {
			return owner.getSession().get(getClass()).get(key);
		}
		return null;
	}

	/**
	 * Sets a session value.
	 *
	 * @param owner		the tab this menu item belongs to
	 * @param key       the key to look for
	 * @param value     the value to set
	 */
	public void setSessionValue(T owner, String key, Object value) {
		if (!owner.getSession().containsKey(getClass()))
			owner.getSession().put(getClass(), new HashMap<String, Object>());
		owner.getSession().get(getClass()).put(key, value);
	}

	/**
	 * Returns the menu item for the tab's custom menu.
	 *
	 * @param owner the tab this menu item is for
	 * @return the menu item
	 */
	public abstract JMenuItem getMenuItem(T owner);

	/**
	 * Updates the menu item using the current state of the tab.
	 *
	 * @param owner the tab that the menu item belongs to
	 * @param menuitem the menu item to update (was generated by this class)
	 */
	public abstract void update(T owner, JMenuItem menuitem);
}
